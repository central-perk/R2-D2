// Generated by CoffeeScript 1.8.0
var APP_CONFIG, BASC_AUTH_CONFIG, basicAuth, bodyParser, compression, config, cookieParser, env, errorHandler, express, favicon, filePath, hbs, logger, methodOverride, mongoStore, multer, serveStatic, session, utils;

env = process.env.NODE_ENV || 'dev';

express = require('express');

compression = require('compression');

cookieParser = require('cookie-parser');

bodyParser = require('body-parser');

session = require('express-session');

mongoStore = require('connect-mongo')(session);

methodOverride = require('method-override');

serveStatic = require('serve-static');

favicon = require('serve-favicon');

errorHandler = require('errorhandler');

logger = require('morgan');

multer = require('multer');

hbs = require('hbs');

basicAuth = require('connect-basic-auth');

config = process.g.config;

utils = process.g.utils;

filePath = process.g.path;

APP_CONFIG = config.APP;

BASC_AUTH_CONFIG = APP_CONFIG.BASC_AUTH;

module.exports = function(app, passport, mongoose) {
  if (app.get('env') === 'dev') {
    app.use(errorHandler());
    app.use(logger('dev'));
  }
  app.use(function(req, res, next) {
    res.success = function(data) {
      return res.json(data);
    };
    res.successMsg = function(data) {
      return res.json({
        msg: data
      });
    };
    res.errorMsg = function(data) {
      return res.status(500).json({
        msg: data
      });
    };
    return next();
  });
  app.set('port', APP_CONFIG.PORT);
  app.set('views', path.join(filePath.pub, 'views'));
  app.set('view engine', 'html');
  app.engine('html', hbs.__express);
  hbs.registerPartials(path.join(filePath.pub, 'views', 'partials'));
  app.enable('jsonp callback');
  app.use(basicAuth(function(credentials, req, res, next) {
    if (credentials && credentials.username === BASC_AUTH_CONFIG.username && credentials.password === BASC_AUTH_CONFIG.password) {
      return next();
    } else {
      return next("Unautherized!");
    }
  }));
  app.use(compression());
  app.use(cookieParser());
  app.use(bodyParser.urlencoded({
    extended: true
  }));
  app.use(bodyParser.json());
  app.use(methodOverride());
  app.use(serveStatic(filePath.pub));
  app.use(session({
    resave: true,
    saveUninitialized: true,
    secret: APP_CONFIG.SESSION.secret,
    store: new mongoStore({
      db: mongoose.connection.db,
      collection: APP_CONFIG.SESSION.collection
    }),
    cookie: APP_CONFIG.COOKIE,
    key: 'ex_mean_sid'
  }));
  app.use(passport.initialize());
  app.use(passport.session());
  return app.use(multer());
};

//# sourceMappingURL=express.js.map
