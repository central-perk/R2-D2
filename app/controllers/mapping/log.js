// Generated by CoffeeScript 1.7.1
var config, fCheckLogSize, fCreateLogFile, fWriteFile, fWriteableLog, fs, logFileDao, logFileStatus, logsPath, path, utils;

path = require('path');

fs = require('fs-extra');

utils = process.g.utils;

config = process.g.config;

logFileStatus = config.STATUS.LOGFILE;

logsPath = process.g.logsPath;

logFileDao = require(process.g.daoPath)['logFile'];

fWriteableLog = function(logType, callback) {
  return logFileDao.getOne({
    type: logType,
    status: logFileStatus.writeable
  }, function(err, oWriteableLog) {
    var bLogSizeOK, sWriteableLog, sWriteableLogPath;
    if (!err) {
      if (oWriteableLog) {
        sWriteableLog = oWriteableLog.name;
        sWriteableLogPath = path.join(logsPath, sWriteableLog);
        bLogSizeOK = fCheckLogSize(sWriteableLogPath);
        if (bLogSizeOK) {
          return callback(null, sWriteableLogPath);
        } else {
          logFileDao.update({
            name: sWriteableLog
          }, {
            status: logFileStatus.unstorage
          }, function(err, doc) {});
          return fCreateLogFile(logType, callback);
        }
      } else {
        return fCreateLogFile(logType, callback);
      }
    } else {
      throw err;
    }
  });
};

fCheckLogSize = function(sWriteableLogPath) {
  var nSize;
  nSize = fs.readFileSync(sWriteableLogPath, 'utf8').length;
  return config.LOG_MAX_SIZE > nSize;
};

fCreateLogFile = function(logType, callback) {
  var sWriteableLog, sWriteableLogPath;
  sWriteableLog = "" + logType + "." + (utils.getTime()) + ".log";
  sWriteableLogPath = path.join(logsPath, sWriteableLog);
  fs.createFileSync(sWriteableLogPath);
  return logFileDao.create({
    type: logType,
    name: sWriteableLog
  }, function(err, raw) {
    return callback(err, sWriteableLogPath);
  });
};

fWriteFile = function(sWriteableLogPath) {
  return function(message, cb) {
    message = JSON.stringify(message, null, 0) + '\n';
    return fs.writeFile(sWriteableLogPath, message, {
      encoding: 'utf8',
      flag: 'a'
    }, cb);
  };
};

module.exports = function(logType, callback) {
  return fWriteableLog(logType, function(err, sWriteableLogPath) {
    return callback(null, fWriteFile(sWriteableLogPath));
  });
};
