// Generated by CoffeeScript 1.7.1
var Dao, fs, log2json, logsPath, path, utils, _;

fs = require('fs-extra');

path = require('path');

_ = require('lodash');

utils = process.g.utils;

logsPath = process.g.logsPath;

Dao = {};

log2json = function(data) {
  var logs;
  logs = data.split('\n').slice(0, -1);
  _.each(logs, function(log, index) {
    logs[index] = JSON.parse(logs[index]);
    delete logs[index].level;
    return delete logs[index].message;
  });
  return logs;
};

module.exports = function(cb, flag) {
  var logFileLength;
  logFileLength = fs.readdirSync(logsPath).length;
  return _.each(fs.readdirSync(logsPath), function(file, index) {
    var TS, filePath, logs, model;
    filePath = path.join(logsPath, file);
    model = file.split('.')[0];
    TS = Number(file.split('.')[1]);
    if (utils.getTime(new Date()) > TS || flag) {
      Dao[model] = require(process.g.daoPath)[model];
      logs = fs.readFileSync(filePath, 'utf-8');
      logs = log2json(logs);
      return Dao[model].create(logs, function(err, data) {
        if (!err) {
          fs.deleteSync(filePath);
        } else {
          console.log(err);
          cb(err);
        }
        if (logFileLength === index + 1) {
          return cb(null);
        }
      });
    }
  });
};

module.exports = function(logFileName) {
  var logFilePath;
  return logFilePath = path.join(logsPath, logFileName);
};
